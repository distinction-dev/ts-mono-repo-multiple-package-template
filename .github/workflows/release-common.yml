name: Publish NPM Packages Script As Indpendent Version

on:
  push:
    branches:
      - main
    paths:
      - packages/**
      - lerna.json

jobs:
    publish:
      name: Publish
      runs-on: ubuntu-latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2
        - name: Setup Node
          uses: actions/setup-node@v2
          with:
            node-version: 20
            registry-url: 'https://npm.pkg.github.com'
        - name: Git Identity
          run: |
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_REGISTRY_PACKGES_TOKEN }}
        - name: Install
          run: yarn install --frozen-file
        - name: Set Current Version
          run: |
            CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
            echo "CURRENT_VERSION=${CURRENT_VERSION}" >> $GITHUB_ENV
        - name: Tag Check
          id: tag_check
          run: |
            GET_API_URL="https://api.github.com/repos/${GITHUB_REPOSITORY}/git/ref/tags/v${CURRENT_VERSION}"
            http_status_code=$(curl -LI $GET_API_URL -o /dev/null -w '%{http_code}\n' -s \
              -H "Authorization: token ${GITHUB_TOKEN}")
            if [ "$http_status_code" -ne "404" ] ; then
              echo "::set-output name=exists_tag::true"
            else
              echo "::set-output name=exists_tag::false"
            fi
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_REGISTRY_PACKGES_TOKEN }}
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_REGISTRY_PACKGES_TOKEN }} 
          with:
            tag_name: ${{ env.CURRENT_VERSION }}
            release_name: ${{ github.event.pull_request.title }}
            body: |
              ${{ github.event.pull_request.body }}
            draft: false
            prerelease: false
        - name: Publish
          run: |
            yarn lerna publish --exact --yes --skip-git --no-push --repo-version ${{ env.CURRENT_VERSION }}
          env:
            GH_TOKEN: ${{ secrets.GITHUB_REGISTRY_PACKGES_TOKEN }}